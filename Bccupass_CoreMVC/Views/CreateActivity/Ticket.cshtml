@using Bccupass_CoreMVC.Models.ViewModel.CreateActivity
@model List<CreateTicketViewModel>

@section Topcss {
     <link rel="stylesheet" href="~/css/CreateActivity/Ticket.css" />
}

<div class="container-md m-auto bg-white container-style">
    <div class="ticket m-auto p-5">
        <form method="post" action="/CreateActivity/Ticket">
            <input type="hidden" name="ActivityDraftId" value="@ViewData["ActivityDraftId"]" />
            <div class="col-12 border-bottom pb-5 flex-wrap">
                <p class="mb-4">修改活動時間</p>
                @await Html.PartialAsync("_ticketSelectTimePartial",
                        new {
                            Start = "2020-02-02", 
                            End = "2020-02-02", 
                            SHour = "3", 
                            SMin = "4",
                            EHour = "5",
                            EMin = "6"
                        }
                    )
                <!-- 新增 -->
                <p class="mb-5">新增的活動票券</p>
                <div class="overflow-auto">
                    <table class="table border accordion ticket-table"  id="accordionExample">
                        <thead class="table-dark border border-dark thead-min-width">
                        <tr>
                            <th scope="col" colspan="2" class="col-md-4">票券名稱</th>
                            <th scope="col" class="col-md-2">票券數量</th>
                            <th scope="col" colspan="2" class="col-md-3">票價</th>
                            <th scope="col" colspan="2" class="col-md-3">操作</th>
                        </tr>
                        </thead>
                        <tbody>
                        
                            @foreach(var item in Model)
                            {
                                @await Html.PartialAsync("_ticketSettingPartial",item)
                                
                            }
                        
                        </tbody>
                        <tfoot class="border-top-0">
                            <tr>
                            <td colspan="7" class="p-0">
                                <div class="backcolor justify-content-center align-content-center d-flex pt-4 pb-4">
                                    <button id="free" type="button" class="btn bg-white btn-add-ticket me-2"><i class="fas fa-plus icon-btn"></i>免費票</button>
                                    <button id="noFree" type="button" class="btn bg-white btn-add-ticket"><i class="fas fa-plus icon-btn"></i>付費票</button>
                                </div>
                            </td>
                        </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
            <div class="mt-3 mb-5">
                <button class="btn btn-success w-100"  onclick="setData()" type="submit">儲存變更</button>
            </div>
            <input type="hidden" id="TicketJson" name="TicketDataJson" />

          </form>  

                    

            <!-- Modal-Delete -->
            <div class="modal fade"id="DeleteModal" tabindex="-1" aria-labelledby="DeleteModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered m-auto model-width" >
                    <div class="modal-content">
                        <div class="modal-body text-center lh-lg pt-3 pe-3">
                            確定刪除票券？
                        </div>
                        <div class="modal-footer p-0 flex-nowrap">
                            <button class="btn border-0 p-1 col-6 m-0 border-end" data-bs-dismiss="modal">取消</button>
                            <button class="btn border-0 p-1 col-6 m-0 lh-lg" id="deleteBtn" >確認</button>
                        </div>
                    </div>
                </div>
            </div>
            
        
        
    </div>
            
</div>


@section endJS {
    <script>
        var addFree = document.getElementById('free')
        var addNoFree = document.getElementById('noFree')
        var hour = document.getElementById('hour')

        var outputJson = document.getElementById('TicketJson')

        var dataArray = []


        addFree.onclick = function(){
           var  data = {
                    ActivityDraftId:  @ViewData["ActivityDraftId"],
                    TicketName: ``,
                    Quantity: 0,
                    Price: 0,
                    Description: ``,
                    SellStartTime: ``,
                    SellStartHour: `1`,
                    SellStartMin: `0`,
                    SellEndTime: ``,
                    SellEndHour: `1`,
                    SellEndMin: `0`,
                    CheckStartTime: ``,
                    CheckStartHour: `1`,
                    CheckStartMin: `0`,
                    CheckEndTime: ``,
                    CheckEndHour: `1`,
                    CheckEndMin: `0`,
                    IsSell: false,
                    IsCheckEqualActivityTime: false,
                    IsFree: true,
                    BuyLimitLeast: 0,
                    BuyLimitMost: 0,
                    TicketGroup: ``, 
                    Sort : dataArray.length
                }

            dataArray.push(data)

            outputJson.setAttribute('value',JSON.stringify(dataArray))

            addTicketFetch()
        }

        addNoFree.onclick = function(){
           var  data = {
                    ActivityDraftId:  @ViewData["ActivityDraftId"],
                    TicketName: ``,
                    Quantity: 0,
                    Price: 0,
                    Description: ``,
                    SellStartTime: ``,
                    SellEndTime: ``,
                    CheckStartTime: ``,
                    CheckEndTime: ``,
                    IsSell: false,
                    IsCheckEqualActivityTime: false,
                    IsFree: false,
                    BuyLimitLeast: 0,
                    BuyLimitMost: 0,
                    TicketGroup: ``, 
                    Sort : dataArray.length
                }

            dataArray.push(data)

            outputJson.setAttribute('value',JSON.stringify(dataArray))
            addTicketFetch()
        }

        function addTicketFetch(){
            fetch("/CreateActivity/FetchTicket", {
                headers: {
                    'Accept': 'application/json, text/plain',
                    'Content-Type': 'application/json;charset=UTF-8'
                },
                method: 'POST',
                body: JSON.stringify(dataArray)
            })
            .then(response => {
                response.json()
                window.location.reload()
            })
        }

        function setData(){
            for(var i = 0; i<dataArray.length; i++){
                    const ticketname = document.querySelector(`#name${i}`)//
                    const quantity = document.querySelector(`#quantity${i}`)//
                    const price = document.querySelector(`#price${i}`)//
                    const description = document.querySelector(`#des${i}`)//

                    const SellStartTime = document.querySelector(`#time${i}>div>input`)//
                    const SellStartHour = document.querySelector(`#time${i}>div>select`)//
                    const SellStartMin = document.querySelector(`#time${i}>div>select:last-child `)//
            
                    const SellEndTime = document.querySelector(`#time${i}> div:nth-child(5) > input`)//
                    const SellEndHour = document.querySelector(`#time${i}> div:nth-child(5) >select`)//
                    const SellEndMin = document.querySelector(`#time${i}> div:nth-child(5) >select:last-child `)//

                    const CheckStartTime = document.querySelector(`#time${i}> div:nth-child(9) > input`)//
                    const CheckStartHour = document.querySelector(`#time${i}> div:nth-child(9) >select`)//
                    const CheckStartMin = document.querySelector(`#time${i}> div:nth-child(9) >select:last-child `)//

                    const CheckEndTime = document.querySelector(`#time${i}> div:nth-child(10) > input`)//
                    const CheckEndHour = document.querySelector(`#time${i}> div:nth-child(10) >select`)//
                    const CheckEndMin = document.querySelector(`#time${i}> div:nth-child(10) >select:last-child `)//

                    const iCA = document.querySelector(`#time${i}  >label >input `) //IsCheckEqualActivityTime  
                    const IsSell = document.querySelector(`#time${i}  > div:nth-child(12) >input `)//
                    const buyLimitLeast = document.querySelector(`#least${i}`)
                    const buyLimitMost = document.querySelector(`#most${i}`)
                    var isNull = 0

                    dataArray[i].TicketName = ticketname.value
                    dataArray[i].Quantity = quantity.value
                    dataArray[i].Price = (price==null? isNull : price.value)
                    dataArray[i].Description = description.value
                    dataArray[i].IsCheckEqualActivityTime = iCA.checked


                    dataArray[i].SellStartTime = SellStartTime.value
                    dataArray[i].SellStartHour = SellStartHour.value
                    dataArray[i].SellStartMin = SellStartMin.value
            
                    dataArray[i].SellEndTime = SellEndTime.value
                    dataArray[i].SellEndHour = SellEndHour.value
                    dataArray[i].SellEndMin = SellEndMin.value
            
                    dataArray[i].CheckStartTime = CheckStartTime.value
                    dataArray[i].CheckStartHour = CheckStartHour.value
                    dataArray[i].CheckStartMin = CheckStartMin.value
            
                    dataArray[i].CheckEndTime = CheckEndTime.value
                    dataArray[i].CheckEndHour = CheckEndHour.value
                    dataArray[i].CheckEndMin = CheckEndMin.value

                    dataArray[i].IsCheckEqualActivityTime = iCA.checked
                    dataArray[i].IsSell = IsSell.checked
            
                    dataArray[i].BuyLimitLeast = (buyLimitLeast==null? isNull :buyLimitLeast.value)
                    dataArray[i].BuyLimitMost = (buyLimitMost==null? isNull :buyLimitMost.value)

                }
             outputJson.setAttribute('value',JSON.stringify(dataArray))
        }

        function deleteModel(id){
            const deleteBtn = document.getElementById('deleteBtn')
            deleteBtn.addEventListener('click', deleteData.bind(this,id))
        }

        function deleteData(id){
             dataArray.forEach(item => {
                    if(item.Sort == id){
                        dataArray.splice(dataArray.findIndex(index => index == item),1)
                    }
                })

            for(var i = 0; i < dataArray.length;i++){
                dataArray[i].Sort = i
            }
            outputJson.setAttribute('value',JSON.stringify(dataArray))

            addTicketFetch()
             var myModal = document.querySelector(`#DeleteModal`)
             bootstrap.Modal.getOrCreateInstance(myModal).hide();
        }
        
        function cloneTicket(id){
            dataArray.forEach(item => {
                    if(item.Sort == id){
                        dataArray.push(item)
                    }
                })
            for(var i = 0; i < dataArray.length;i++){
                dataArray[i].Sort = i
            }
            outputJson.setAttribute('value',JSON.stringify(dataArray))

            addTicketFetch()
        }


        //function setSelect(){
        //    const select = document.querySelector('select') 
        //    select.value

        //}

    </script>
   


     @foreach(var item in Model){
            <script type="text/javascript">
               var  data = {
                    ActivityDraftId: @item.ActivityDraftId,
                    TicketName: `@item.TicketName`,
                    Quantity: @item.Quantity,
                    Price: @item.Price,
                    Description: `@item.Description`,
                    SellStartTime: `@item.SellStartTime`,
                    SellStartHour: `@item.SellStartHour`,
                    SellStartMin: `@item.SellStartMin`,
                    SellEndTime: `@item.SellEndTime`,
                    SellEndHour: `@item.SellEndHour`,
                    SellEndMin: `@item.SellEndMin`,
                    CheckStartTime: `@item.CheckStartTime`,
                    CheckStartHour: `@item.CheckStartHour`,
                    CheckStartMin: `@item.CheckStartMin`,
                    CheckEndTime: `@item.CheckEndTime`,
                    CheckEndHour: `@item.CheckEndHour`,
                    CheckEndMin: `@item.CheckEndMin`,
                    IsSell: @Json.Serialize(item.IsSell),
                    IsCheckEqualActivityTime: @Json.Serialize(item.IsCheckEqualActivityTime),
                    IsFree: @Json.Serialize(item.IsFree),
                    BuyLimitLeast: @item.BuyLimitLeast,
                    BuyLimitMost: @item.BuyLimitMost,                    
                    TicketGroup: `@item.TicketGroup`, 
                    Sort : @item.Sort
                }

                dataArray.push(data)

                outputJson.setAttribute('value',JSON.stringify(dataArray))   
            </script>
     }
}