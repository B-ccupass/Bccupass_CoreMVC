@using Bccupass_CoreMVC.Models.ViewModel.Ticket
@using Newtonsoft.Json
@model TicketPurchaseViewModel

@{
    ViewData["Title"] = "TicketList";
}
<div class="container d-flex flex-wrap p-3 m-auto" id="app">
    <div class="row">
        <div class="activity-info mb-3 col-12 col-lg-4 pe-2">
            <img src="@Model.ActivityList.Image" alt="活動圖片" class="col-12">
            <h2 class="fs-5 mt-2 mb-4">@Model.ActivityList.ActivityName</h2>
            <p class="m-0 small">@Model.ActivityList.StartTime ~ @Model.ActivityList.EndTime</p>
            <p class="small">@Model.ActivityList.City @Model.ActivityList.District @Model.ActivityList.Address</p>
            <div class="must-know text-primary fs-6 pe-lg-5">
                <div class=" my-1 fs-6">
                <p class="small">購票須知：<br />請注意，您應該先完成一筆訂購後再進行下一筆購買。為保障消費者權益及杜絕非法囤票，同一使用者同時間只能進行一筆訂購，透過多開視窗同時購買將造成訂單無效，敬請理解與配合。</p>
                </div>
            </div>
        </div>
        <div class="ticket-group col-12 col-lg-8" id="ticketList">
            <div class="ticket-group-select mb-3" v-if="ticketGroupList.length > 0">
                <div class="">請選擇票種</div>
                <select v-model="selectticketGroup" name="" id="" class="d-block w-100 p-1">
                    <option v-for="(item, index) in ticketGroupList" :value="item" :key="index">{{item}}</option>
                </select>
            </div>
            <div class="accordion accordion-flush " id="accordionPanelsStayOpenExample">
                 <div class="accordion-item border border-1 my-2 p-2" v-for="(item, index) in ticketList" :key="item.ticketId">
                    <div class="accordion-header" id="panelsStayOpen-headingOne">
                        <div class="activity-buying d-flex my-1">
                            <div class="buyinfo col-10">
                                <div class="fs-4">{{item.ticketName}}</div>
                                <div class="fs-5 fw-bold d-inline">NT$ {{item.price}}</div><span class="small text-primary ps-2 ticket-count" v-if="item.buyCount > 0">{{item.buyCount}}</span>
                            </div>
                            <div class="buy-btn col-2 d-flex">
                                <button class="add-btn buy-button btn btn-primary border rounded-circle m-auto d-flex align-items-center justify-content-center fs-3" v-on:click="addCount(item)">+</button>
                                <button class="reduce-btn buy-button btn btn-primary border rounded-circle m-auto d-flex align-items-center justify-content-center fs-3" v-on:click="reduceCount(item)">-</button>
                            </div>
                        </div>
                        <button class="accordion-button fw-bold ps-0 collapsed" type="button" data-bs-toggle="collapse"
                            :data-bs-target=`#ticket-id-${item.ticketId}` aria-expanded="false"
                            :aria-controls=`ticket-id-${item.ticketId}`>
                            更多資訊
                        </button>
                    </div>
                    <div :id=`ticket-id-${item.ticketId}` class="accordion-collapse collapse"
                        aria-labelledby="panelsStayOpen-headingOne">
                        <div class="accordion-body text-primary">
                            <div class="fs-6 mb-2">
                                <div class=" fw-bold">售票時間</div>
                                {{item.sellStartTime}} ~ {{item.sellEndTime}}
                            </div>
                            <div class="fs-6 mb-2">
                                <div class="fw-bold">票券可使用時間</div>
                                {{item.checkStartTime}} ~ {{item.checkEndTime}}
                            </div>
                            <div class="fs-6 mb-2">
                                <div class="fw-bold">票券說明</div>
                                {{item.description}}
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="d-flex flex-column w-100">
        <p v-if="ticketCount != 0" class="m-0 text-end">已選購 {{ticketCount}} 張票，共 {{sumPrice}} 元</p>
        <button :disabled='!isAbleToNext' class="w-100 p-2 btn btn-outline-primary mt-2 submit-ticketBuy-btn" v-on:click="fetchCart">下一步: 填寫報名資訊</button>
    </div>
</div>

@section Topcss{
    <link rel="stylesheet" href="~/css/buyTicket/buyTicket.css" />
}

@section EndJs{
    <script>
       //const ticketWrap = document.querySelectorAll(".activity-buying");
        
       //ticketWrap.forEach(wrap => {
       //    console.dir(wrap)
       //    let addBtn = wrap.querySelector(".add-btn")
       //    let reduceBtn = wrap.querySelector(".reduce-btn")
       //    let buyCount = wrap.querySelector(".ticket-count")
       //    let leastCount = wrap.dataset.least
       //    let mostCount = wrap.dataset.most

       //    addBtn.onclick = function(){
       //        let number = 0
       //        number = parseInt(buyCount.innerHTML) + 1
       //        buyCount.innerText = number
       //        if(number == mostCount){
       //            addBtn.setAttribute("disabled", "")
       //        }else{
       //            if(reduceBtn.hasAttribute("disabled")){
       //                reduceBtn.removeAttribute("disabled");
       //            }
       //        }
       //        isBuyCountZero(number, buyCount)
       //    }
       //    reduceBtn.onclick = function(){
       //        let number = 0
       //        number = parseInt(buyCount.innerHTML) - 1
       //        buyCount.innerText = number
       //        if(number == 0){
       //            reduceBtn.setAttribute("disabled", "")
       //        }else{
       //            if(addBtn.hasAttribute("disabled")){
       //                addBtn.removeAttribute("disabled");
       //            }
       //        }
       //        isBuyCountZero(number, buyCount)
       //    }
       //})

       //function isBuyCountZero(number, buyCount){
       //    if(number == 0){
       //        if(!buyCount.classList.contains('d-none')){
       //            buyCount.classList.add('d-none')
       //        }
       //    }else{
       //        if(buyCount.classList.contains('d-none')){
       //            buyCount.classList.remove('d-none')
       //        }
       //    }
       //}
    </script>
    <script>
        let app = new Vue({
            el: '#app',
            data: {
                ticketList: JSON.parse('@Html.Raw(Json.Serialize(Model.TicketList))'),
                ticketGroupList: [...new Set(JSON.parse('@Html.Raw(Json.Serialize(Model.TicketList))').map(x => x.groupName))],
                selectticketGroup: '',
                ticketCount: 0,
                sumPrice: 0,
                isAbleToNext: false
            },
            methods: {
                addCount(ticket){
                    if(ticket.buyCount + 1 <= ticket.buyMostCount){
                        ticket.buyCount++
                    }
                    this.computeCart()
                },
                reduceCount(ticket){
                    if(ticket.buyCount - 1 >= 0){
                        ticket.buyCount--
                    }
                    this.computeCart()
                },
                computeCart(){
                    this.ticketCount = this.ticketList.map(x => x.buyCount).reduce((a, b) => {return a + b})
                    this.sumPrice = this.ticketList.map(x => x.price * x.buyCount).reduce((a, b) => {return a + b})
                    if(this.ticketCount != 0){
                        this.isAbleToNext = true
                    }else{
                        this.isAbleToNext = false
                    }
                },
                fetchCart(){
                    let cartList = this.ticketList.map(x => ({
                        ticketId: x.ticketId,
                        buyCount: x.buyCount,
                    }))
                    console.log(cartList)
                }
            },
            watch: {
                selectticketGroup:function(){
                    this.ticketList = JSON.parse('@Html.Raw(Json.Serialize(Model.TicketList))').filter(x => x.groupName == this.selectticketGroup)
                }
            },
            created() {
                if(this.ticketGroupList != 0){
                    this.selectticketGroup = this.ticketGroupList[0];
                }
            }
        })
    </script>
}