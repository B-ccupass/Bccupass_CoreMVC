// <auto-generated />
using System;
using Bccupass_CoreMVC.Models.DBEntity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bccupass_CoreMVC.Migrations
{
    [DbContext(typeof(BccupassDBContext))]
    partial class BccupassDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .HasColumnType("int")
                        .HasComment("活動Id");

                    b.Property<string>("ActivityDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("活動描述");

                    b.Property<string>("ActivityIntro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("活動簡介");

                    b.Property<string>("ActivityNotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("活動注意事項");

                    b.Property<int>("ActivityPrimaryThemeId")
                        .HasColumnType("int");

                    b.Property<string>("ActivityRefWebUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("活動參考網址");

                    b.Property<int?>("ActivitySecondThemeId")
                        .HasColumnType("int");

                    b.Property<int>("ActivityState")
                        .HasColumnType("int")
                        .HasComment("活動狀態\r\n0: 草稿\r\n1: 已上架\r\n2: 已下架\r\n3: 已結束\r\n4: 已刪除 IDelete\r\n");

                    b.Property<int>("ActivityTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("線下活動: 活動地址(詳細地址)");

                    b.Property<string>("AddressDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Enum 線下活動: 活動地址(地址描述:甚麼大樓、甚麼展館)");

                    b.Property<int?>("City")
                        .HasColumnType("int")
                        .HasComment("Enum 線下活動: 活動地址(縣市)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasComment("活動建立時間");

                    b.Property<int?>("District")
                        .HasColumnType("int")
                        .HasComment("Enum 線下活動: 活動地址(行政區)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime")
                        .HasComment("活動結束時間");

                    b.Property<bool>("FormAddress")
                        .HasColumnType("bit")
                        .HasComment("地址");

                    b.Property<bool>("FormAge")
                        .HasColumnType("bit")
                        .HasComment("年齡");

                    b.Property<bool>("FormBirthday")
                        .HasColumnType("bit")
                        .HasComment("生日");

                    b.Property<bool>("FormConpanyName")
                        .HasColumnType("bit")
                        .HasComment("公司名稱");

                    b.Property<bool>("FormDepartment")
                        .HasColumnType("bit")
                        .HasComment("enum部門");

                    b.Property<bool>("FormDiningNeeds")
                        .HasColumnType("bit")
                        .HasComment("0: 全素, 1: 蛋奶素, 2: 不吃豬, 3: 不吃牛");

                    b.Property<bool>("FormEducationLevel")
                        .HasColumnType("bit")
                        .HasComment("0: 國小, 1:國中, 2:高中高職, 3:大學專科 4, 研究所, 5: 博士");

                    b.Property<bool>("FormEmail")
                        .HasColumnType("bit")
                        .HasComment("電子郵件");

                    b.Property<bool>("FormFax")
                        .HasColumnType("bit")
                        .HasComment("傳真");

                    b.Property<bool>("FormGender")
                        .HasColumnType("bit")
                        .HasComment("0: Female, 1:Male");

                    b.Property<bool>("FormHobby")
                        .HasColumnType("bit")
                        .HasComment("興趣");

                    b.Property<bool>("FormIdnumber")
                        .HasColumnType("bit")
                        .HasColumnName("FormIDNumber")
                        .HasComment("身分證字號");

                    b.Property<bool>("FormIndustry")
                        .HasColumnType("bit")
                        .HasComment("enum產業");

                    b.Property<bool>("FormJobTitle")
                        .HasColumnType("bit")
                        .HasComment("職稱");

                    b.Property<bool>("FormMaritalStatus")
                        .HasColumnType("bit")
                        .HasComment("0: Single, 1: Engaged, 2: Married");

                    b.Property<bool>("FormMonthlyIncome")
                        .HasColumnType("bit")
                        .HasComment("月收入");

                    b.Property<string>("FormName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("姓名");

                    b.Property<bool>("FormPhone")
                        .HasColumnType("bit")
                        .HasComment("電話");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("活動主圖");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("活動名稱");

                    b.Property<int>("OrganizerId")
                        .HasColumnType("int")
                        .HasComment("主辦方Id");

                    b.Property<string>("RefWebDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("活動參考網址描述");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime")
                        .HasComment("活動開始時間");

                    b.Property<string>("StreamingWeb")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActivityId");

                    b.HasIndex("ActivityPrimaryThemeId");

                    b.HasIndex("ActivitySecondThemeId");

                    b.HasIndex("ActivityTypeId");

                    b.HasIndex("OrganizerId");

                    b.ToTable("Activity");

                    b
                        .HasComment("活動上架後能改的\r\n活動代表圖\r\n嘉賓\r\n活動參考網址、活動參考網址描述\r\n活動描述\r\n\r\n活動上架後能改的 -> 但要發公告\r\n活動名稱\r\n開始、結束時間\r\n活動簡介\r\n活動注意事項\r\n\r\n活動開始後不能改的 -> 全部欄位、只能發公告");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.ActivityAnnouncement", b =>
                {
                    b.Property<int>("AnnouncementId")
                        .HasColumnType("int")
                        .HasComment("活動公告PK");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int")
                        .HasComment("活動FK");

                    b.Property<string>("AnnouncementContent")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("活動公告內容");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasComment("發布時間");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("公告順序");

                    b.HasKey("AnnouncementId")
                        .HasName("PK_活動公告");

                    b.HasIndex("ActivityId");

                    b.ToTable("ActivityAnnouncement");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.ActivityIntroImg", b =>
                {
                    b.Property<int>("ActivityIntroImageId")
                        .HasColumnType("int")
                        .HasComment("活動簡介圖片PK");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int")
                        .HasComment("活動FK");

                    b.Property<string>("ActivityIntroImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("活動簡介圖片");

                    b.HasKey("ActivityIntroImageId")
                        .HasName("PK_活動簡介圖片");

                    b.HasIndex("ActivityId");

                    b.ToTable("ActivityIntroImg");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.ActivityNotification", b =>
                {
                    b.Property<int>("ActivityNotificationId")
                        .HasColumnType("int")
                        .HasComment("活動通知Id");

                    b.Property<int>("ActiveNotificationStatus")
                        .HasColumnType("int")
                        .HasComment("活動通知狀態");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int")
                        .HasComment("活動Id");

                    b.Property<DateTime>("BuildTime")
                        .HasColumnType("datetime")
                        .HasComment("編輯時間");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("目標Email");

                    b.Property<string>("EmailContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Email內容");

                    b.Property<string>("LettersSubject")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Email主題");

                    b.Property<DateTime>("SendTime")
                        .HasColumnType("datetime")
                        .HasComment("發送時間");

                    b.HasKey("ActivityNotificationId");

                    b.ToTable("ActivityNotification");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.ActivityNotificationUser", b =>
                {
                    b.Property<int>("ActivityNotificationUserId")
                        .HasColumnType("int");

                    b.Property<int>("ActivityNotificationId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ActivityNotificationUserId");

                    b.HasIndex("ActivityNotificationId");

                    b.HasIndex("UserId");

                    b.ToTable("ActivityNotificationUser");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.ActivityTag", b =>
                {
                    b.Property<int>("ActivityId")
                        .HasColumnType("int")
                        .HasComment("活動ID");

                    b.Property<int>("ActivityTagId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int")
                        .HasComment("活動標籤ID");

                    b.HasIndex("ActivityId");

                    b.HasIndex("TagId");

                    b.ToTable("ActivityTag");

                    b
                        .HasComment("");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.ActivityTheme", b =>
                {
                    b.Property<int>("ActivityThemeId")
                        .HasColumnType("int")
                        .HasComment("活動主題PK");

                    b.Property<string>("ActivityThemeImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("活動主題圖片");

                    b.Property<string>("ActivityThemeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("活動主題名稱(0:戶外,1:學習,2:親子,3.寵物,4.科技,5.商業,6.創業,7.投資,8.設計,9.藝文,10.手作,11.美食,12.攝影,13.遊戲,14.運動,15.健康,16.音樂,17.電影)");

                    b.HasKey("ActivityThemeId");

                    b.ToTable("ActivityTheme");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.ActivityType", b =>
                {
                    b.Property<int>("ActivityTypeId")
                        .HasColumnType("int");

                    b.Property<string>("TypeImg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ActivityTypeId");

                    b.ToTable("ActivityType");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.Comment", b =>
                {
                    b.Property<int>("ActivityId")
                        .HasColumnType("int")
                        .HasComment("活動Id");

                    b.Property<DateTime>("BuildTime")
                        .HasColumnType("datetime")
                        .HasComment("編輯時間");

                    b.Property<string>("Comment1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Comment")
                        .HasComment("評論內容");

                    b.Property<int>("CommentId")
                        .HasColumnType("int")
                        .HasComment("評論Id");

                    b.Property<int>("StarRank")
                        .HasColumnType("int")
                        .HasComment("星級評等");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("UserId");

                    b.HasIndex("ActivityId");

                    b.HasIndex("UserId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.Guest", b =>
                {
                    b.Property<int>("GuestId")
                        .HasColumnType("int")
                        .HasComment("嘉賓ID");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int")
                        .HasComment("活動ID");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("公司名稱");

                    b.Property<string>("Describe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("敘述");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("姓名");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("照片");

                    b.Property<string>("SocialLink")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("相關連結");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("Title")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("職稱");

                    b.HasKey("GuestId");

                    b.HasIndex("ActivityId");

                    b.ToTable("Guest");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .HasColumnType("int");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("OrderState")
                        .HasColumnType("int")
                        .HasComment("訂單狀態 0: 未付款, 1: 已付款/已報名, 2: 已取消,3: 以退票");

                    b.Property<int>("OrderTime")
                        .HasColumnType("int")
                        .HasComment("訂單建立時間");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("ActivityId");

                    b.HasIndex("UserId");

                    b.ToTable("OrderDetail");

                    b
                        .HasComment("");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.Organizer", b =>
                {
                    b.Property<int>("OrganizerId")
                        .HasColumnType("int")
                        .HasComment("主辦Id");

                    b.Property<string>("Banner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("主辦簡介");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("主辦聯絡Email");

                    b.Property<string>("FacebookWebsite")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("主辦FaceBook");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("主辦圖像");

                    b.Property<string>("InstagramWebsite")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("主辦Instagram");

                    b.Property<string>("MediumWebsite")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("主辦Medium");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("主辦名");

                    b.Property<string>("OfficialWebsite")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("主辦官網");

                    b.Property<string>("OrganizerWebQuery")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("主辦網站查詢");

                    b.Property<string>("Telphone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("主辦連絡電話");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("UserId");

                    b.Property<string>("YoutubeWebsite")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("主辦Youtube");

                    b.HasKey("OrganizerId");

                    b.ToTable("Organizer");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.Qa", b =>
                {
                    b.Property<int>("QaId")
                        .HasColumnType("int")
                        .HasComment("常見問題ID");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int")
                        .HasComment("活動ID");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("回答");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("問題");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("QaId");

                    b.HasIndex("ActivityId");

                    b.ToTable("QA");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.SystemAnnouncement", b =>
                {
                    b.Property<int>("SystemAnnouncementId")
                        .HasColumnType("int")
                        .HasColumnName("SystemAnnouncementID")
                        .HasComment("系統公告PK");

                    b.Property<DateTime>("ReleaseTime")
                        .HasColumnType("datetime")
                        .HasComment("發佈時間");

                    b.Property<string>("SystemAnnouncementContent")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasComment("系統公告內容");

                    b.Property<string>("SystemAnnouncementTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("系統公告標題");

                    b.HasKey("SystemAnnouncementId");

                    b.ToTable("SystemAnnouncement");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("標籤名稱");

                    b.HasKey("TagId");

                    b.ToTable("Tag");

                    b
                        .HasComment("活動標籤名稱");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.TicketDatail", b =>
                {
                    b.Property<int>("TicketDatailId")
                        .HasColumnType("int")
                        .HasComment("(PK)票卷設定Id");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("BuyLimitLeast")
                        .HasColumnType("int")
                        .HasComment("最少購賣數量限制");

                    b.Property<int>("BuyLimitMost")
                        .HasColumnType("int")
                        .HasComment("最多購買數量限制");

                    b.Property<DateTime>("CheckEndTime")
                        .HasColumnType("datetime")
                        .HasComment("結束驗票時間");

                    b.Property<DateTime>("CheckStartTime")
                        .HasColumnType("datetime")
                        .HasComment("開始驗票時間");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("票卷說明");

                    b.Property<bool>("IsSell")
                        .HasColumnType("bit")
                        .HasComment("是否開賣");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,0)")
                        .HasComment("價格");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasComment("數量(庫存)");

                    b.Property<DateTime>("SellEndTime")
                        .HasColumnType("datetime")
                        .HasComment("結束販賣時間");

                    b.Property<DateTime>("SellStartTime")
                        .HasColumnType("datetime")
                        .HasComment("開始販賣時間");

                    b.Property<string>("TicketGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TicketName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("票卷名稱");

                    b.HasKey("TicketDatailId");

                    b.HasIndex("ActivityId");

                    b.ToTable("TicketDatail");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.TicketDetailOrderDetail", b =>
                {
                    b.Property<int>("TicketDetailOrderDetailId")
                        .HasColumnType("int");

                    b.Property<string>("BuyerAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("BuyerAge")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BuyerBirthday")
                        .HasColumnType("datetime");

                    b.Property<string>("BuyerConpanyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("BuyerDepartment")
                        .HasColumnType("int")
                        .HasComment("enum");

                    b.Property<int?>("BuyerDiningNeeds")
                        .HasColumnType("int")
                        .HasComment("0: 全素, 1: 蛋奶素, 2: 不吃豬, 3: 不吃牛");

                    b.Property<int?>("BuyerEducationLevel")
                        .HasColumnType("int")
                        .HasComment("0: 國小, 1:國中, 2:高中高職, 3:大學專科 4, 研究所, 5: 博士");

                    b.Property<string>("BuyerEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BuyerFax")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.Property<int?>("BuyerGender")
                        .HasColumnType("int")
                        .HasComment("0: Female, 1:Male");

                    b.Property<string>("BuyerHobby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BuyerIdnumber")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("BuyerIDNumber")
                        .IsFixedLength(true);

                    b.Property<int?>("BuyerIndustry")
                        .HasColumnType("int")
                        .HasComment("enum");

                    b.Property<string>("BuyerJobTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("BuyerMaritalStatus")
                        .HasColumnType("int")
                        .HasComment("0: Single, 1: Engaged, 2: Married");

                    b.Property<int?>("BuyerMonthlyIncome")
                        .HasColumnType("int");

                    b.Property<string>("BuyerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BuyerPhone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.Property<bool>("CheckStatus")
                        .HasColumnType("bit");

                    b.Property<int>("OrderDetailId")
                        .HasColumnType("int");

                    b.Property<int>("TicketDetailId")
                        .HasColumnType("int");

                    b.Property<decimal>("UniPrice")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("TicketDetailOrderDetailId");

                    b.HasIndex("OrderDetailId");

                    b.HasIndex("TicketDetailId");

                    b.ToTable("TicketDetailOrderDetail");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.User", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("使用者ID");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("居住地");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("date")
                        .HasComment("生日");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("顯示名稱");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("電子郵件");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit")
                        .HasComment("性別(true=男 False=女)");

                    b.Property<int?>("Job")
                        .HasColumnType("int")
                        .HasComment("醫療產業");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("姓名");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .IsFixedLength(true)
                        .HasComment("密碼");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasComment("電話");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("大頭照");

                    b.Property<int?>("Relationship")
                        .HasColumnType("int")
                        .HasComment("感情狀態(Enum 1:單身 2. 有穩定交往對象 3.已婚)");

                    b.Property<bool>("Verification")
                        .HasColumnType("bit")
                        .HasComment("帳號驗證");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.UserFavorite", b =>
                {
                    b.Property<int>("FavoritesId")
                        .HasColumnType("int")
                        .HasComment("使用者收藏Id");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int")
                        .HasComment("活動Id");

                    b.Property<DateTime>("BuildTime")
                        .HasColumnType("datetime")
                        .HasComment("編輯時間");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("UserId");

                    b.HasKey("FavoritesId");

                    b.HasIndex("ActivityId");

                    b.HasIndex("UserId");

                    b.ToTable("UserFavorites");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.UserFollowOrganizer", b =>
                {
                    b.Property<int>("UserFollowOrganizerId")
                        .HasColumnType("int")
                        .HasComment("使用者追蹤主辦ID");

                    b.Property<DateTime>("BuildTime")
                        .HasColumnType("datetime");

                    b.Property<int>("OrganizerId")
                        .HasColumnType("int")
                        .HasComment("主辦ID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("使用者ID");

                    b.HasKey("UserFollowOrganizerId");

                    b.HasIndex("OrganizerId");

                    b.HasIndex("UserId");

                    b.ToTable("UserFollowOrganizer");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.Activity", b =>
                {
                    b.HasOne("Bccupass_CoreMVC.Models.DBEntity.ActivityTheme", "ActivityPrimaryTheme")
                        .WithMany("ActivityActivityPrimaryThemes")
                        .HasForeignKey("ActivityPrimaryThemeId")
                        .HasConstraintName("FK_Activity_ActivityTheme")
                        .IsRequired();

                    b.HasOne("Bccupass_CoreMVC.Models.DBEntity.ActivityTheme", "ActivitySecondTheme")
                        .WithMany("ActivityActivitySecondThemes")
                        .HasForeignKey("ActivitySecondThemeId")
                        .HasConstraintName("FK_Activity_ActivityTheme1");

                    b.HasOne("Bccupass_CoreMVC.Models.DBEntity.ActivityType", "ActivityType")
                        .WithMany("Activities")
                        .HasForeignKey("ActivityTypeId")
                        .HasConstraintName("FK_Activity_ActivityType")
                        .IsRequired();

                    b.HasOne("Bccupass_CoreMVC.Models.DBEntity.Organizer", "Organizer")
                        .WithMany("Activities")
                        .HasForeignKey("OrganizerId")
                        .HasConstraintName("FK_Activity_Organizer")
                        .IsRequired();

                    b.Navigation("ActivityPrimaryTheme");

                    b.Navigation("ActivitySecondTheme");

                    b.Navigation("ActivityType");

                    b.Navigation("Organizer");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.ActivityAnnouncement", b =>
                {
                    b.HasOne("Bccupass_CoreMVC.Models.DBEntity.Activity", "Activity")
                        .WithMany("ActivityAnnouncements")
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("FK_EventAnnouncement_Activity")
                        .IsRequired();

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.ActivityIntroImg", b =>
                {
                    b.HasOne("Bccupass_CoreMVC.Models.DBEntity.Activity", "Activity")
                        .WithMany("ActivityIntroImgs")
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("FK_ActivityIntroImg_Activity")
                        .IsRequired();

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.ActivityNotificationUser", b =>
                {
                    b.HasOne("Bccupass_CoreMVC.Models.DBEntity.ActivityNotification", "ActivityNotification")
                        .WithMany("ActivityNotificationUsers")
                        .HasForeignKey("ActivityNotificationId")
                        .HasConstraintName("FK_ActivityNotificationUser_ActivityNotification")
                        .IsRequired();

                    b.HasOne("Bccupass_CoreMVC.Models.DBEntity.User", "User")
                        .WithMany("ActivityNotificationUsers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_ActivityNotificationUser_User")
                        .IsRequired();

                    b.Navigation("ActivityNotification");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.ActivityTag", b =>
                {
                    b.HasOne("Bccupass_CoreMVC.Models.DBEntity.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("FK_ActivityTag_Activity1")
                        .IsRequired();

                    b.HasOne("Bccupass_CoreMVC.Models.DBEntity.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .HasConstraintName("FK_ActivityTag_Tag")
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.Comment", b =>
                {
                    b.HasOne("Bccupass_CoreMVC.Models.DBEntity.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("FK_Comment_Activity")
                        .IsRequired();

                    b.HasOne("Bccupass_CoreMVC.Models.DBEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Comment_User")
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.Guest", b =>
                {
                    b.HasOne("Bccupass_CoreMVC.Models.DBEntity.Activity", "Activity")
                        .WithMany("Guests")
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("FK_Guest_Activity")
                        .IsRequired();

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.OrderDetail", b =>
                {
                    b.HasOne("Bccupass_CoreMVC.Models.DBEntity.Activity", "Activity")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("FK_OrderDetail_Activity")
                        .IsRequired();

                    b.HasOne("Bccupass_CoreMVC.Models.DBEntity.User", "User")
                        .WithMany("OrderDetails")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_OrderDetail_User")
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.Qa", b =>
                {
                    b.HasOne("Bccupass_CoreMVC.Models.DBEntity.Activity", "Activity")
                        .WithMany("Qas")
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("FK_QA_Activity")
                        .IsRequired();

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.TicketDatail", b =>
                {
                    b.HasOne("Bccupass_CoreMVC.Models.DBEntity.Activity", "Activity")
                        .WithMany("TicketDatails")
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("FK_TicketDatail_Activity")
                        .IsRequired();

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.TicketDetailOrderDetail", b =>
                {
                    b.HasOne("Bccupass_CoreMVC.Models.DBEntity.OrderDetail", "OrderDetail")
                        .WithMany("TicketDetailOrderDetails")
                        .HasForeignKey("OrderDetailId")
                        .HasConstraintName("FK_TicketDetailOrderDetail_OrderDetail")
                        .IsRequired();

                    b.HasOne("Bccupass_CoreMVC.Models.DBEntity.TicketDatail", "TicketDetail")
                        .WithMany("TicketDetailOrderDetails")
                        .HasForeignKey("TicketDetailId")
                        .HasConstraintName("FK_TicketDetailOrderDetail_TicketDatail")
                        .IsRequired();

                    b.Navigation("OrderDetail");

                    b.Navigation("TicketDetail");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.UserFavorite", b =>
                {
                    b.HasOne("Bccupass_CoreMVC.Models.DBEntity.Activity", "Activity")
                        .WithMany("UserFavorites")
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("FK_UserFavorites_Activity")
                        .IsRequired();

                    b.HasOne("Bccupass_CoreMVC.Models.DBEntity.User", "User")
                        .WithMany("UserFavorites")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserFavorites_User")
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.UserFollowOrganizer", b =>
                {
                    b.HasOne("Bccupass_CoreMVC.Models.DBEntity.Organizer", "Organizer")
                        .WithMany("UserFollowOrganizers")
                        .HasForeignKey("OrganizerId")
                        .HasConstraintName("FK_UserFollowOrganizer_Organizer")
                        .IsRequired();

                    b.HasOne("Bccupass_CoreMVC.Models.DBEntity.User", "User")
                        .WithMany("UserFollowOrganizers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserFollowOrganizer_User")
                        .IsRequired();

                    b.Navigation("Organizer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.Activity", b =>
                {
                    b.Navigation("ActivityAnnouncements");

                    b.Navigation("ActivityIntroImgs");

                    b.Navigation("Guests");

                    b.Navigation("OrderDetails");

                    b.Navigation("Qas");

                    b.Navigation("TicketDatails");

                    b.Navigation("UserFavorites");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.ActivityNotification", b =>
                {
                    b.Navigation("ActivityNotificationUsers");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.ActivityTheme", b =>
                {
                    b.Navigation("ActivityActivityPrimaryThemes");

                    b.Navigation("ActivityActivitySecondThemes");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.ActivityType", b =>
                {
                    b.Navigation("Activities");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.OrderDetail", b =>
                {
                    b.Navigation("TicketDetailOrderDetails");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.Organizer", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("UserFollowOrganizers");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.TicketDatail", b =>
                {
                    b.Navigation("TicketDetailOrderDetails");
                });

            modelBuilder.Entity("Bccupass_CoreMVC.Models.DBEntity.User", b =>
                {
                    b.Navigation("ActivityNotificationUsers");

                    b.Navigation("OrderDetails");

                    b.Navigation("UserFavorites");

                    b.Navigation("UserFollowOrganizers");
                });
#pragma warning restore 612, 618
        }
    }
}
